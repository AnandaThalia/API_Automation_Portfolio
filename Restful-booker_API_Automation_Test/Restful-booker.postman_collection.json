{
	"info": {
		"_postman_id": "e7d15310-83ed-431c-b435-da752297c238",
		"name": "Restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9785562"
	},
	"item": [
		{
			"name": "Auth - CreateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains correct token\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.token).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"token\", jsonData.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": [
				{
					"name": "Success create token",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1736908311&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=JdSwizdyCKvNQte22%2FmxgBwARFPa4vU3ULz3pfCnc0o%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1736908311&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=JdSwizdyCKvNQte22%2FmxgBwARFPa4vU3ULz3pfCnc0o%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "27"
						},
						{
							"key": "Etag",
							"value": "W/\"1b-P+XCKbZ3Ai71/AYLxdq9tuBqiZo\""
						},
						{
							"key": "Date",
							"value": "Wed, 15 Jan 2025 02:31:51 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"ec356fb1d059170\"\n}"
				},
				{
					"name": "Failed create token with invalid username",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"staff\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1736908391&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XVOfzWPIgZZ%2FMFe0TwI7sHRioWEzyh1aHkDfzXtCBy4%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1736908391&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XVOfzWPIgZZ%2FMFe0TwI7sHRioWEzyh1aHkDfzXtCBy4%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "28"
						},
						{
							"key": "Etag",
							"value": "W/\"1c-J3EiwfZwVQjKTKvpvazUfTni8fI\""
						},
						{
							"key": "Date",
							"value": "Wed, 15 Jan 2025 02:33:11 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"reason\": \"Bad credentials\"\n}"
				}
			]
		},
		{
			"name": "Booking - GetBookingIds",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking?firstnam&lastname&checkin&checkout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstnam",
							"value": null,
							"description": "String - Return bookings with a specific firstname"
						},
						{
							"key": "lastname",
							"value": null
						},
						{
							"key": "checkin",
							"value": null
						},
						{
							"key": "checkout",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBooking",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"bookingid\", jsonData.bookingid);\r",
							"\r",
							"pm.test(\"Booking details match the request\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking.firstname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.booking.lastname).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.booking.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.booking.depositpaid).to.a(\"boolean\");\r",
							"    pm.expect(jsonData.booking.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.booking.bookingdates.checkout).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.booking.additionalneeds).to.be.a(\"string\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// pm.variables.set(\"firstname\", \"Ananda\");\r",
							"// pm.variables.set(\"lastname\", \"Thalia\");\r",
							"// pm.variables.set(\"totalprice\", 111);\r",
							"// pm.variables.set(\"depositpaid\", true);\r",
							"// pm.variables.set(\"checkin\", \"2025-01-15\");\r",
							"// pm.variables.set(\"checkout\", \"2025-01-15\");\r",
							"// pm.variables.set(\"additionalneeds\", \"Lunch\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": {{depositpaid}},\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - UpdateBooking",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - PartialUpdateBooking",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - DeleteBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"token\")) {\r",
							"    throw new Error(\"token is not set. Run the Auth - CreateToken request first.\");\r",
							"}\r",
							"\r",
							"if (!pm.environment.get(\"bookingid\")) {\r",
							"    throw new Error(\"bookingid is not set. Run the CreateBooking request first.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains 'Created'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		}
	]
}